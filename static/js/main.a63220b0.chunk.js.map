{"version":3,"sources":["utils/NewId.js","utils/Player.js","utils/Drawer.js","components/ChordSuggestionCard.js","utils/Constants.js","utils/Chord.js","components/CustomChordSelector.js","components/CustomChordCard.js","components/ChordSelector.js","components/Sheet.js","components/SheetActions.js","components/ConfirmationDialog.js","components/Composer.js","utils/FileLoader.js","utils/Model.js","utils/Normaliser.js","components/SocialIcons.js","App.js","serviceWorker.js","index.js","img/Logo3.png"],"names":["lastId","newId","prefix","playChord","chord","synth","Tone","toMaster","set","triggerAttackRelease","notes","polySynth","undefined","chordPart","playChords","chords","bpm","value","stop","cancel","dispose","convertedChords","map","index","time","chordNotes","start","loop","drawChords","div","width","height","showCaption","VF","Vex","innerHTML","renderer","Renderer","Backends","SVG","resize","context","getContext","staveWidth","stave","Stave","addClef","setContext","draw","toVexChord","voice","Voice","num_beats","length","beat_value","addTickables","Formatter","joinVoices","format","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","ChordSuggestionCard","suggestion","addChord","classes","randomId","useEffect","document","getElementById","Paper","className","Typography","variant","name","style","marginTop","id","display","probability","toFixed","Tooltip","title","arrow","IconButton","aria-label","onClick","fontSize","Constants","NumberOfNotes","SequenceLength","SuggestedChordNumber","Chord","containsAccidental","this","root_name","substring","quality_name","getNotes","semitones","rootValue","ToNumber","ToNote","isMajor","ToComponents","indexOf","angle_in_5th_circle_radians","Math","PI","sin","cos","root_value","absolute_quality_components","relative_component","accidentalToAvoid","includes","baseScale","component","suffix","floor","note_name","find","plainNotes","noteName","accidentals","filter","tuple","type","result","StaveNote","clef","keys","duration","addModifier","Annotation","setVerticalJustification","VerticalJustify","TOP","forEach","accidental","addAccidental","Accidental","formControl","margin","minWidth","maxWidth","selectEmpty","CustomChordSelector","chordSelected","useState","root","setRoot","setType","FormControl","InputLabel","Select","labelId","onChange","event","target","range","MenuItem","key","Qualities","quality","CustomChordCard","customChord","setCustomChord","sheetWidth","flexGrow","ChordSelector","chordSuggestions","createRow","chordSuggestionsSlice","Fragment","Grid","item","xs","container","slice","marginLeft","marginRight","Sheet","SheetActions","play","removeLast","clear","placement","Transition","React","forwardRef","props","ref","Slide","direction","ConfirmationDialog","open","onNoClicked","onYesClicked","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Composer","setChords","confirmDialogOpen","setConfirmDialogOpen","previousChords","loadFile","fileName","fileType","Promise","resolve","reject","xhr","XMLHttpRequest","responseType","onload","status","blob","response","File","lastModified","Date","now","statusText","onerror","send","loadModel","modelFile","weightsFile","a","async","tf","browserFiles","loadedModel","getChordSuggestions","model","chordsMean","meanFunction","values","reduce","b","sum","positions","getXYPositionIn5thCircle","mean","position","angle_degrees","atan2","abs","indexIn5thCircle","round","getAverageValueInScale","numberSequence","transpose","sequenceWithFixedLength","ensureArrayLength","tensor","expandDims","predict","dataSync","probabilities","Array","from","shift","chordProbabilities","ToChord","sort","left","right","array","desiredLength","pad_array","fill","pad","SocialIcons","Link","href","createMuiTheme","primary","light","main","dark","contrastText","initialChords","chordName","App","body","setModel","setChordSuggestions","modelPath","weightPath","getModel","then","suggestions","ThemeProvider","src","logo","alt","alignItems","justify","minHeight","CircularProgress","thickness","size","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a63220b0.chunk.js","sourcesContent":["let lastId = 0;\n\n const newId = (prefix='id') => {\n    lastId++;\n    return `${prefix}${lastId}`;\n}\n\nexport default newId;","import * as Tone from 'tone'\n\nconst playChord = (chord) => {\n    var synth = new Tone.PolySynth(6, Tone.Synth, {\n        \"volume\" : -8,\n        \"oscillator\" : {\n            \"partials\" : [1, 2, 5],\n        },\n        \"portamento\" : 0.005\n    }).toMaster()\n\n      //set the attributes using the set interface\n      synth.set(\"detune\", -1200);\n      //play a chord\n      synth.triggerAttackRelease(chord.notes, 1);\n}\n\nvar polySynth = undefined;\nvar chordPart = undefined;\n\nconst stopIt = () => {\n    Tone.Transport.bpm.value = 100; \n    Tone.Transport.stop();\n    Tone.Transport.cancel(0);\n    if(polySynth) {\n        polySynth.dispose();\n        polySynth = null;\n    }\n    if(chordPart) {\n        chordPart.dispose();\n        chordPart = null;\n    }\n}\n\nconst playChords = (chords) => {\n    stopIt();\n\n    polySynth = new Tone.PolySynth(6, Tone.Synth, {\n        \"volume\" : -8,\n        \"oscillator\" : {\n            \"partials\" : [1, 2, 5],\n        },\n        \"portamento\" : 0.005\n    }).toMaster()\n\n    //set the attributes using the set interface\n    polySynth.set(\"detune\", -1200);\n\n    const convertedChords = chords.map( (chord, index) => [index, chord.notes]);\n\n    chordPart = new Tone.Part(function(time, chordNotes){\n\t\tpolySynth.triggerAttackRelease(chordNotes, \"2n\", time);\n\t}, convertedChords ).start(0);\n\n\tchordPart.loop = false;\n\n\tTone.Transport.start();\n}\n\nexport { playChord, playChords};","import * as Vex from 'vexflow'\n\nconst drawChords = (chords, div, width, height, showCaption) => {\n    const VF = Vex.Flow;\n    \n    div.innerHTML = '';\n    var renderer = new VF.Renderer(div, VF.Renderer.Backends.SVG);\n    \n    renderer.resize(width,height);\n    \n    var context = renderer.getContext();\n    \n    const stavePositionX  = 0;\n    const stavePositionY  = 0;\n    const staveWidth  = width - 5;\n    var stave = new VF.Stave(stavePositionX, stavePositionY, staveWidth);\n    \n    stave.addClef(\"treble\");\n    \n    stave.setContext(context).draw();\n    \n    const notes = chords.map(chord => chord.toVexChord(showCaption))\n    \n    var voice = new VF.Voice({num_beats: 4 * chords.length,  beat_value: 4});\n    voice.addTickables(notes);\n    \n    const formatter = new VF.Formatter()\n    formatter.joinVoices([voice]).format([voice], 1000);\n    \n    voice.draw(context, stave);\n};\n\nexport default drawChords;","import React , { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography, Tooltip, IconButton } from '@material-ui/core'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport newId from '../utils/NewId';\nimport {playChord} from '../utils/Player';\nimport drawChords from '../utils/Drawer';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    },\n  }));\n\nconst sheetWidth = 130;\nconst sheetHeight = 120;\n\nconst ChordSuggestionCard = ({suggestion, addChord}) => {\n    const chord = suggestion.chord;\n    const classes = useStyles();\n    const randomId = newId('div-');\n\n    useEffect(() => {\n      const div = document.getElementById(randomId);\n      drawChords([chord],div,sheetWidth,sheetHeight);\n    }, [chord, randomId])\n\n    return (\n      <Paper className={classes.paper}>\n              <Typography variant=\"h6\" color='primary'>{chord.name}</Typography>\n              <div style={{textAlign:'center', marginTop:7}}>\n                <div id={randomId} style={{width: 100, display:'inline-block'}}></div>\n              </div>\n              <Typography>Probability: {(suggestion.probability * 100).toFixed(2)}%</Typography>\n              <Tooltip title=\"Listen\" arrow>\n                <IconButton aria-label=\"Listen\" onClick={() => playChord(chord)}>\n                  <PlayCircleOutlineIcon fontSize='large' color='primary'></PlayCircleOutlineIcon>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Add\" arrow>\n                <IconButton aria-label=\"Add\" onClick={() => addChord(chord)}>\n                  <AddBoxIcon fontSize='large' color='primary'></AddBoxIcon>\n                </IconButton>\n              </Tooltip>\n        </Paper>\n    );\n  }\n\n  export default ChordSuggestionCard;","const Constants = {\n    NumberOfNotes: 12,\n    SequenceLength: 20,\n    SuggestedChordNumber: 7\n}\n\nexport default Constants;","import ToComponents from '../dictionaries/quality_to_components'\nimport ToNumber from '../dictionaries/note_to_value'\nimport ToNote from '../dictionaries/value_to_note'\nimport Constants from '../utils/Constants'\nimport * as Vex from 'vexflow'\n\nexport default class Chord {\n    constructor(name) {\n        const containsAccidental = name.length > 1 && (name[1] === '#' || name[1] === 'b');\n\n        this.root_name = containsAccidental ? name.substring(0,2) : name.substring(0,1);\n        this.quality_name = containsAccidental ? name.substring(2) : name.substring(1);\n\n        this.name = name;\n\n        this.notes = this.getNotes();\n    }\n\n    transpose(semitones) {\n        let rootValue = (ToNumber[this.root_name] + semitones) % Constants.NumberOfNotes;\n        rootValue = rootValue >= 0 ? rootValue : Constants.NumberOfNotes + rootValue;\n        let chordName = `${ToNote[rootValue][0]}${this.quality_name}`;\n        return new Chord(chordName);\n    }\n\n    getXYPositionIn5thCircle() {\n        const quality_components = ToComponents[this.quality_name];\n\n        const isMajor = quality_components.indexOf(3) === -1;\n\n        let rootValue = ToNumber[this.root_name];\n        rootValue = isMajor ? rootValue : (rootValue + 3) % Constants.NumberOfNotes;\n\n        const position_in_5th_circle = (rootValue * 7) % Constants.NumberOfNotes;\n        const step_angle = 360.0 / Constants.NumberOfNotes;\n\n        const angle_in_5th_circle_degrees = position_in_5th_circle * step_angle;\n\n        const angle_in_5th_circle_radians = (angle_in_5th_circle_degrees * Math.PI) / 180\n\n        return [\n            Math.sin(angle_in_5th_circle_radians),\n            Math.cos(angle_in_5th_circle_radians)\n        ]\n    }\n\n    getNotes() {\n        const root_value = ToNumber[this.root_name];\n        const quality_components = ToComponents[this.quality_name];\n\n        const absolute_quality_components = \n                quality_components.map(relative_component => root_value + relative_component );\n\n        const accidentalToAvoid = this.root_name.includes('b') ? '#' : 'b';\n\n        const baseScale = root_value >=7 ? 3 : 4;\n\n        const notes = absolute_quality_components.map(component => {\n            const suffix = baseScale + Math.floor(component / Constants.NumberOfNotes);\n            const note_name = ToNote[component % Constants.NumberOfNotes].find(name => !name.includes(accidentalToAvoid))\n\n            return `${note_name}${suffix}`\n        });\n\n        return notes;\n    }\n\n    toVexChord(showCaption) {\n        const VF = Vex.Flow;\n\n        const plainNotes = this.notes.map(noteName => `${noteName[0]}/${noteName[noteName.length -1]}`); //G#4 -> G/4 \n\n        const accidentals = this.notes\n                                .map( (noteName, index) => ({index, noteName}))\n                                .filter(tuple => tuple.noteName.length > 2)\n                                .map(tuple => ({...tuple, type: tuple.noteName[1]}));\n\n        const result = new VF.StaveNote({clef: \"treble\", keys: plainNotes, duration: \"w\" })\n\n        if(showCaption) {\n            result.addModifier(0, new Vex.Flow.Annotation(this.name).setVerticalJustification(Vex.Flow.Annotation.VerticalJustify.TOP));\n        }\n\n        accidentals.forEach(accidental => result.addAccidental(accidental.index, new VF.Accidental(accidental.type)))\n        return result;\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ToNote from './../dictionaries/value_to_note.json'\nimport { range } from 'lodash'\nimport Qualities from './../dictionaries/unique_qualities.json'\nimport Chord from '../utils/Chord.js';\n\nconst typeWidth = 120;\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 10,\n      maxWidth:typeWidth\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\nconst CustomChordSelector = ({chordSelected}) => {\n    const classes = useStyles();\n    const [root, setRoot] = useState('C');\n    const [type, setType] = useState('maj');\n\n    useEffect(() => {\n        chordSelected(new Chord(`${root}${type === 'maj' ? '' : type}`));\n    }, [root, type, chordSelected])\n\n    return (\n        <>\n            <div>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"root-label\">Root</InputLabel>\n                    <Select\n                    labelId=\"root-label\"\n                    id=\"root-select\"\n                    value={root}\n                    onChange={event => setRoot(event.target.value)}\n                    >\n                    {range(0,12).map(value => <MenuItem key={value} value={ToNote[value][0]}>{ToNote[value][0]}</MenuItem>)}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl} style={{width:typeWidth}}>\n                    <InputLabel id=\"type-label\">Type</InputLabel>\n                    <Select\n                    labelId=\"type-label\"\n                    id=\"type-select\"\n                    value={type}\n                    onChange={event => setType(event.target.value)}\n                    >\n                    {Qualities.map(quality => <MenuItem key={quality || 'maj'} value={quality || 'maj'}>{quality || 'maj'}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </div>\n        </>\n    )\n};\n\nexport default CustomChordSelector;","import React , { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Tooltip, IconButton } from '@material-ui/core'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport newId from '../utils/NewId';\nimport {playChord} from '../utils/Player';\nimport CustomChordSelector from './CustomChordSelector';\nimport Chord from '../utils/Chord';\nimport drawChords from '../utils/Drawer';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    },\n  }));\n\nconst sheetWidth = 130;\nconst sheetHeight = 118.5;\n\nconst CustomChordCard = ({addChord}) => {\n    const classes = useStyles();\n    const randomId = newId('div-');\n\n    const [customChord, setCustomChord] = useState(new Chord('C'));\n\n    useEffect(() => {\n      const div = document.getElementById(randomId);\n      drawChords([customChord], div,sheetWidth, sheetHeight);\n    }, [customChord, randomId])\n\n    return (\n      <Paper className={classes.paper} style={{minWidth:sheetWidth + 10}}>\n              <CustomChordSelector chordSelected={setCustomChord}></CustomChordSelector>\n              <div style={{textAlign:'center'}}>\n                <div id={randomId} style={{width: sheetWidth, display:'inline-block'}}></div>\n              </div>\n              <Tooltip title=\"Listen\" arrow>\n                <IconButton aria-label=\"Listen\" onClick={() => playChord(customChord)}>\n                  <PlayCircleOutlineIcon fontSize='large' color='primary'></PlayCircleOutlineIcon>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Add\" arrow>\n                <IconButton aria-label=\"Add\" onClick={() => addChord(customChord)}>\n                  <AddBoxIcon fontSize='large' color='primary'></AddBoxIcon>\n                </IconButton>\n              </Tooltip>\n        </Paper>\n    );\n  }\n\n  export default CustomChordCard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ChordSuggestionCard from './ChordSuggestionCard';\nimport CustomChordCard from './CustomChordCard';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst ChordSelector = ({chordSuggestions, addChord}) => {\n  const classes = useStyles();\n\n   const createRow = (chordSuggestionsSlice) => {\n    return (\n      <React.Fragment>\n        {chordSuggestionsSlice.map((suggestion, index) => (\n          <Grid item xs={3} key={index}>\n          {suggestion ? <ChordSuggestionCard suggestion={suggestion} addChord={addChord}></ChordSuggestionCard> : <CustomChordCard  addChord={addChord}></CustomChordCard>}\n        </Grid>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root} style={{display: 'inline-flex'}}>\n      <Grid container spacing={1} style={{maxWidth:1000}}>\n        <Grid container item xs={12} spacing={1}>\n          {createRow(chordSuggestions.slice(0,4))}\n        </Grid>\n        <Grid container item xs={12} spacing={1}>\n          {createRow([...chordSuggestions.slice(4,7),null])}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ChordSelector;","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport drawChords from '../utils/Drawer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    marginLeft: 100,\n    marginRight: 100\n  },\n}));\n\nconst sheetWidth = 1100;\nconst sheetHeight = 120;\nconst divId = 'sheet-div';\n\nconst Sheet = ({chords}) => {\n    const classes = useStyles();\n\n    useEffect(() => {\n      var div = document.getElementById(divId)\n      drawChords(chords, div, sheetWidth, sheetHeight,true);\n    }, [chords])\n\n    return (\n        <Paper className={classes.paper}>\n            <div style={{textAlign:'center'}}>\n                <div id={divId} style={{width: sheetWidth, display:'inline-block'}}></div>\n            </div>\n        </Paper>\n    )\n}\n\nexport default Sheet;","import React from 'react';\nimport { Tooltip, IconButton } from '@material-ui/core'\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst SheetActions = ({play, removeLast, clear}) => {\nreturn (\n    <div>\n        <Tooltip title=\"Listen\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Listen\" onClick={play}>\n            <PlayCircleOutlineIcon fontSize='large' color='primary'></PlayCircleOutlineIcon>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Remove last chord\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Remove last chord\" onClick={removeLast}>\n            <BackspaceIcon fontSize='large' color='primary'></BackspaceIcon>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Clear composition\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Clear composition\" onClick={clear}>\n            <DeleteForeverIcon fontSize='large' color='primary'></DeleteForeverIcon>\n          </IconButton>\n        </Tooltip>\n    </div>\n  )\n}\n\nexport default SheetActions;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst ConfirmationDialog = ({open,onNoClicked, onYesClicked}) => {\n  return (\n    <Dialog\n    open={open}\n    TransitionComponent={Transition}\n    keepMounted\n    onClose={onNoClicked}\n    aria-labelledby=\"alert-dialog-slide-title\"\n    aria-describedby=\"alert-dialog-slide-description\"\n    >\n    <DialogTitle id=\"alert-dialog-slide-title\">{\"Remove song clear\"}</DialogTitle>\n    <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n        Do you really want to remove ALL chords from the song?\n        </DialogContentText>\n    </DialogContent>\n    <DialogActions>\n        <Button onClick={onNoClicked} color=\"secondary\">\n        No\n        </Button>\n        <Button onClick={onYesClicked} color=\"primary\">\n        Yes\n        </Button>\n    </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ConfirmationDialog;\n","import ChordSelector from './ChordSelector';\nimport React, {useState} from 'react';\nimport Sheet from './Sheet';\nimport SheetActions from './SheetActions';\nimport { playChords } from '../utils/Player';\nimport ConfirmationDialog from './ConfirmationDialog';\n\nconst Composer = ({chordSuggestions,chords,setChords}) => {\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\n\n    const clear = () => {\n      setConfirmDialogOpen(true);\n    }\n\n    const onClearConfirmed = () => {\n      setChords([]);\n      setConfirmDialogOpen(false);\n    }\n\n    const onClearCanceled = () => {\n      setConfirmDialogOpen(false);\n    }\n\n    return (\n        <>\n          <Sheet chords={chords}></Sheet>\n          <SheetActions \n            play={() => playChords(chords)}\n            removeLast={() => setChords(previousChords => previousChords.slice(0, -1) )}\n            clear={clear}\n          />\n          <ChordSelector \n            chordSuggestions={chordSuggestions}\n            addChord={(chord) => setChords(previousChords => [...previousChords, chord])}\n          />\n         <ConfirmationDialog open={confirmDialogOpen} onYesClicked={onClearConfirmed} onNoClicked={onClearCanceled}/>\n        </>\n    );\n}\n\nexport default Composer;","export const loadFile = (fileName, fileType) => {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.responseType = \"blob\";\n        xhr.open('GET', fileName);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n              const blob = xhr.response;\n              resolve(new File([blob], fileName, {type: fileType, lastModified: Date.now()}));\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n}","import * as tf from '@tensorflow/tfjs';\nimport ToNumber from './../dictionaries/category_to_number.json'\nimport ToChord from './../dictionaries/number_to_category.json'\nimport Constants from './Constants.js';\nimport Chord from './Chord';\nimport { loadFile } from './FileLoader.js';\nimport { getAverageValueInScale, transpose } from './Normaliser.js';\n\nexport const getModel = async (modelPath, weightPath) => {\n    const modelFile = await loadFile(modelPath, 'application/json');\n    const weightsFile = await loadFile(weightPath, 'application/octet-stream');\n  \n    return await loadModel(modelFile, weightsFile);\n  }\n\nexport const loadModel = async (modelFile, weightsFile) => {\n    const loadedModel = await tf.loadLayersModel(tf.io.browserFiles(\n    [modelFile, weightsFile]));\n    return loadedModel;\n}\n\nexport const getChordSuggestions = (model, chords) => {\n      const chordsMean = getAverageValueInScale(chords) || 0;\n      const chordNormalised = transpose(chords, -chordsMean);\n      const numberSequence = chordNormalised.map(chord => ToNumber[chord.name])\n      const sequenceWithFixedLength = ensureArrayLength(numberSequence,Constants.SequenceLength);\n     \n      let tensor = tf.tensor1d(sequenceWithFixedLength, 'int32').expandDims(0);\n      const prediction = model.predict(tensor)\n      const values = prediction.dataSync();\n\n      const probabilities = Array.from(values);\n      probabilities.shift() //Remove probabiliy for null chord\n\n      let chordProbabilities = probabilities.map((value,index) => (\n          {\n            probability:value, \n            name: ToChord[index+1], \n            chord:new Chord(ToChord[index+1]).transpose(chordsMean)\n          }));\n      chordProbabilities = chordProbabilities.sort( (left, right) => right.probability - left.probability);\n      chordProbabilities = chordProbabilities.slice(0,Constants.SuggestedChordNumber);\n      \n      return chordProbabilities;\n}\n\nconst ensureArrayLength = (array, desiredLength) => {\n    if(array.length < desiredLength) return pad_array(array,desiredLength,0);\n\n    return array.slice(array.length - desiredLength);;\n}\n\nconst pad_array = (array,desiredLength,fill) => {\n    const pad = new Array(desiredLength - array.length);\n    pad.fill(0)\n\n    return [...pad,...array];\n}","import Constants from \"./Constants\";\n\nexport const getAverageValueInScale = (chords) => {\n   const sum = values => values.reduce((a, b) => a + b, 0);\n   const meanFunction = values => sum(values) / values.length;\n\n   const positions = chords.map(chord => chord.getXYPositionIn5thCircle());\n\n   const x_avg = meanFunction(positions.map(position => position[0]));\n   const y_avg = meanFunction(positions.map(position => position[1]));\n\n    const mean = [x_avg, y_avg];\n\n    const angle = Math.atan2(mean[0], mean[1]);\n\n    let angle_degrees = angle * 180 / Math.PI;\n\n    if (Math.abs(angle_degrees) < 0.001)\n        angle_degrees = 0\n\n    if(angle_degrees < 0)\n        angle_degrees = 360 + angle_degrees\n\n    const step_angle = 360.0 / Constants.NumberOfNotes;\n\n    const indexIn5thCircle =  angle_degrees / step_angle\n\n    const indexInScale = (Math.round(indexIn5thCircle) * 7) % 12\n\n    return indexInScale;\n}\n \nexport const transpose = (chords, semitones) => {\n    return chords.map(chord => chord.transpose(semitones))\n}","import React from 'react';\nimport { Tooltip, IconButton, Link } from '@material-ui/core'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MailIcon from '@material-ui/icons/Mail';\nconst SocialIcons = () => {\nreturn (\n    <div>\n        <Tooltip title=\"Github Repo\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Github Repo\">    \n              <Link href={'http://github.com/huanlui/chord-suggester'}>\n                <GitHubIcon fontSize='large' color='secondary'/>\n              </Link>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"LinkedIn\" placement=\"top\" arrow>\n          <IconButton aria-label=\"LinkedIn\">    \n                <Link href={'https://www.linkedin.com/in/juan-luis-garc%C3%ADa-l%C3%B3pez-99057138/'}>\n                  <LinkedInIcon fontSize='large' color='secondary'/>\n                </Link>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Mail\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Mail\">    \n                <Link href={'mailto:juanluis.garcia@thoughtworks.com'}>\n                  <MailIcon fontSize='large' color='secondary'/>\n                </Link>\n          </IconButton>\n        </Tooltip>\n    </div>\n  )\n}\n\nexport default SocialIcons;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Composer from './components/Composer'\nimport Chord from './utils/Chord';\nimport { getChordSuggestions, getModel } from './utils/Model';\nimport logo from './img/Logo3.png'\nimport SocialIcons from './components/SocialIcons';\nimport { CircularProgress } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\n\n/*\nTODO\n- tempo selector\n- Rellenar en fron más explicaciones aparte de la isntalación. \n- Evaluar el modelo!!!!!\n- Hacer memoria básica en markdon o pdf. \n- Hacer memoria o explicación en la misma página  /https://rexxars.github.io/react-markdown/?\n- Algún grafiquillo más bonito. \n- Incluir dataset con todas las features. \n- selector de modelo\n*/\n\nconst theme = createMuiTheme({\n    palette: {\n      text: {\n        primary: \"#4db6ac\",\n        secondary: \"#707070\"\n      },\n      primary: {\n        light: '#82e9de',\n        main: '#4db6ac',\n        dark: '#00867d',\n        contrastText: '#e8f5e9',\n      },\n      secondary: {\n        light: '#cfcfcf',\n        main: '#9e9e9e',\n        dark: '#707070',\n        contrastText: '#fafafa',\n      },\n    },\n  });\n\nconst pachebel = ['D' ,'A' , 'Bm' , 'F#m' , 'G' , 'D'  ,'G',  'A'];\nconst initialChords = pachebel.map(chordName => new Chord(chordName));\n\nconst App = () => {\n  document.body.style = 'background: #282c34;';\n\n  const [model, setModel] = useState();\n  const [chords,setChords] = useState(initialChords)\n  const [chordSuggestions, setChordSuggestions] = useState();\n\n  useEffect(() => {\n    const modelPath = 'models/tfjs_model_lstm_normalised__W_20_lr_0_0005_epochs=50_batch_128.h5/model.json';\n    const weightPath = 'models/tfjs_model_lstm_normalised__W_20_lr_0_0005_epochs=50_batch_128.h5/group1-shard1of1.bin'\n\n    getModel(modelPath, weightPath).then(loadedModel => {\n      setModel(loadedModel);\n    });\n\n  }, [])\n\n  useEffect(() => {\n    if(!model) return;\n\n    const suggestions = getChordSuggestions(model, chords);\n    setChordSuggestions(suggestions);\n  }, [model, chords]);\n \n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} alt=\"Chord Suggester\" />\n        </header>\n        <div className=\"App-body\">\n          <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '80vh' }}\n            >\n              <Grid item xs={12}>    \n                {chordSuggestions ? \n                <Composer chordSuggestions={chordSuggestions} chords={chords} setChords={setChords}></Composer>\n                :         \n                <CircularProgress thickness={1} size={200}/>}\n              </Grid>   \n          </Grid>\n          <SocialIcons></SocialIcons>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo3.2be4df89.png\";"],"sourceRoot":""}