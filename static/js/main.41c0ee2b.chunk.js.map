{"version":3,"sources":["components/Stepper.js","components/ModelSelector.js","components/WidthsSelector.js","utils/NewId.js","utils/Player.js","utils/Drawer.js","components/ChordSuggestionCard.js","utils/Constants.js","utils/Chord.js","components/CustomChordSelector.js","components/CustomChordCard.js","components/ChordSelector.js","components/Sheet.js","components/SheetActions.js","components/Composer.js","utils/Model.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","flexGrow","button","color","buttonDisabled","Stepper","activeStep","setActiveStep","classes","theme","useTheme","style","textAlign","width","display","MobileStepper","background","variant","steps","position","className","nextButton","Button","size","onClick","prevActiveStep","disabled","direction","backButton","ModelSelector","onSelected","component","type","id","accept","onChange","uploadJSONInput","document","getElementById","console","log","files","WeightsSelector","lastId","newId","prefix","playChord","chord","synth","Tone","toMaster","set","triggerAttackRelease","notes","drawChords","chords","div","height","showCaption","VF","Vex","innerHTML","renderer","Renderer","Backends","SVG","resize","context","getContext","staveWidth","stave","Stave","addClef","setContext","draw","map","toVexChord","voice","Voice","num_beats","length","beat_value","addTickables","Formatter","joinVoices","format","paper","padding","spacing","palette","text","secondary","ChordSuggestionCard","suggestion","addChord","randomId","useEffect","Paper","Typography","name","marginTop","probability","toFixed","Tooltip","title","arrow","IconButton","aria-label","fontSize","Constants","NumberOfNotes","SequenceLength","SuggestedChordNumber","Chord","containsAccidental","this","root_name","substring","quality_name","getNotes","root_value","ToNumber","absolute_quality_components","ToComponents","relative_component","accidentalToAvoid","includes","baseScale","suffix","Math","floor","note_name","ToNote","find","plainNotes","noteName","accidentals","index","filter","tuple","result","StaveNote","clef","keys","duration","addModifier","Annotation","setVerticalJustification","VerticalJustify","TOP","forEach","accidental","addAccidental","Accidental","formControl","margin","minWidth","selectEmpty","CustomChordSelector","chordSelected","useState","setRoot","setType","FormControl","InputLabel","Select","labelId","value","event","target","range","MenuItem","key","Qualities","quality","CustomChordCard","customChord","setCustomChord","sheetWidth","ChordSelector","chordSuggestions","createRow","chordSuggestionsSlice","Fragment","Grid","item","xs","container","slice","marginLeft","marginRight","Sheet","SheetActions","play","removeLast","clear","placement","Composer","setChords","convertedChords","time","start","loop","bpm","playChords","previousChords","loadModel","modelFile","weightsFile","a","async","tf","browserFiles","loadedModel","ensureArrayLength","array","desiredLength","pad_array","fill","pad","Array","createMuiTheme","primary","light","main","dark","contrastText","App","body","initialSuggestedChords","chordName","setModelFile","setWeightsFile","model","setModel","initialChords","setChordSuggestions","then","suggestions","numberSequence","sequenceWithFixedLength","tensor","expandDims","values","predict","dataSync","probabilities","from","shift","chordProbabilities","ToChord","sort","left","right","getChordSuggestions","loadFile","fileName","fileType","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","blob","response","File","lastModified","Date","now","statusText","onerror","send","initModel","ThemeProvider","selectedModelFile","WidthsSelector","selectedWeightsFile","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41c0ee2b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 400,\n      flexGrow: 1,\n    },\n    button: {\n        \"&$buttonDisabled\": {\n            color: '#707070'\n        }\n      },\n    buttonDisabled: {},\n  });\n\nconst Stepper = ({activeStep, setActiveStep}) => {\n    const classes = useStyles();\n    const theme = useTheme();\n   \n    const handleNext = () => {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n  \n    const handleBack = () => {\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    return (\n        <div style={{textAlign:'center'}}>\n            <div style={{width: 400, display:'inline-block'}}>\n                <MobileStepper\n                    style={{background: '#282c34'}}\n                    variant=\"dots\"\n                    steps={6}\n                    position=\"static\"\n                    activeStep={activeStep}\n                    className={classes.root}\n                    nextButton={\n                    <Button color='primary' size=\"small\" onClick={handleNext} disabled={activeStep === 5} classes={{ root: classes.button, disabled: classes.buttonDisabled } }>\n                        Next\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                    }\n                    backButton={\n                    <Button color='primary' size=\"small\" onClick={handleBack} disabled={activeStep === 0} classes={{ root: classes.button, disabled: classes.buttonDisabled } }>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                        Back\n                    </Button>\n                    }\n                />                  \n            </div>\n      \n        </div>\n    );\n  }\n\n  export default Stepper;"," import React from 'react'\n import Button from '@material-ui/core/Button';\n\n const ModelSelector = ({display, onSelected}) => {\n    const inputId = 'upload-json';\n    \n    const modelSelected = () => {\n      const uploadJSONInput = document.getElementById(inputId);\n      console.log(uploadJSONInput.files[0]);\n      onSelected(uploadJSONInput.files[0]);\n    }\n\n    return (<Button\n    variant=\"contained\"\n    component=\"label\"\n    color=\"primary\"\n    style={{display: display ? '' : 'none' }} \n  >\n    Select model file\n    <input\n      type=\"file\"\n      style={{ display: \"none\" }}\n      id={inputId}\n      accept=\".json\"\n      onChange={modelSelected}\n    />\n    </Button>)\n }\n\n export default ModelSelector;"," import React from 'react'\n import Button from '@material-ui/core/Button';\n\n const WeightsSelector = ({display, onSelected}) => {\n    const inputId = 'upload-weights';\n    \n    const modelSelected = () => {\n      const uploadJSONInput = document.getElementById(inputId);\n      onSelected(uploadJSONInput.files[0]);\n    }\n\n    return (<Button\n    variant=\"contained\"\n    component=\"label\"\n    color=\"primary\"\n    style={{display: display ? '' : 'none' }} \n  >\n    Select weights file\n    <input\n      type=\"file\"\n      style={{ display: \"none\" }}\n      id={inputId}\n      accept=\".bin\"\n      onChange={modelSelected}\n    />\n    </Button>)\n }\n\n export default WeightsSelector;","let lastId = 0;\n\n const newId = (prefix='id') => {\n    lastId++;\n    return `${prefix}${lastId}`;\n}\n\nexport default newId;","import * as Tone from 'tone'\n\nconst playChord = (chord) => {\n    var synth = new Tone.PolySynth(6, Tone.Synth, {\n        \"volume\" : -8,\n        \"oscillator\" : {\n            \"partials\" : [1, 2, 5],\n        },\n        \"portamento\" : 0.005\n    }).toMaster()\n\n      //set the attributes using the set interface\n      synth.set(\"detune\", -1200);\n      //play a chord\n      synth.triggerAttackRelease(chord.notes, 1);\n}\n\nconst playChords = (chords) => {\n    var synth = new Tone.PolySynth(6, Tone.Synth, {\n        \"volume\" : -8,\n        \"oscillator\" : {\n            \"partials\" : [1, 2, 5],\n        },\n        \"portamento\" : 0.005\n    }).toMaster()\n\n      //set the attributes using the set interface\n      synth.set(\"detune\", -1200);\n\n    const convertedChords = chords.map( (chord, index) => [index, chord.notes]);\n\n    var chordPart = new Tone.Part(function(time, chord){\n\t\tsynth.triggerAttackRelease(chord, \"2n\", time);\n\t}, convertedChords ).start(0);\n\n\tchordPart.loop = false;\n\n\tTone.Transport.bpm.value = 60;   \n\tTone.Transport.start();\n}\n\nexport { playChord, playChords};","import * as Vex from 'vexflow'\n\nconst drawChords = (chords, div, width, height, showCaption) => {\n    const VF = Vex.Flow;\n    \n    div.innerHTML = '';\n    var renderer = new VF.Renderer(div, VF.Renderer.Backends.SVG);\n    \n    renderer.resize(width,height);\n    \n    var context = renderer.getContext();\n    \n    const stavePositionX  = 0;\n    const stavePositionY  = 0;\n    const staveWidth  = width - 5;\n    var stave = new VF.Stave(stavePositionX, stavePositionY, staveWidth);\n    \n    stave.addClef(\"treble\");\n    \n    stave.setContext(context).draw();\n    \n    const notes = chords.map(chord => chord.toVexChord(showCaption))\n    \n    var voice = new VF.Voice({num_beats: 4 * chords.length,  beat_value: 4});\n    voice.addTickables(notes);\n    \n    const formatter = new VF.Formatter()\n    formatter.joinVoices([voice]).format([voice], 1000);\n    \n    voice.draw(context, stave);\n};\n\nexport default drawChords;","import React , { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography, Tooltip, IconButton } from '@material-ui/core'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport newId from '../utils/NewId';\nimport {playChord} from '../utils/Player';\nimport drawChords from '../utils/Drawer';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    },\n  }));\n\nconst sheetWidth = 130;\nconst sheetHeight = 120;\n\nconst ChordSuggestionCard = ({suggestion, addChord}) => {\n    const chord = suggestion.chord;\n    const classes = useStyles();\n    const randomId = newId('div-');\n\n    useEffect(() => {\n      const div = document.getElementById(randomId);\n      drawChords([chord],div,sheetWidth,sheetHeight);\n    }, [chord, randomId])\n\n    return (\n      <Paper className={classes.paper}>\n              <Typography variant=\"h6\" color='primary'>{chord.name}</Typography>\n              <div style={{textAlign:'center', marginTop:7}}>\n                <div id={randomId} style={{width: 100, display:'inline-block'}}></div>\n              </div>\n              <Typography>Probability: {(suggestion.probability * 100).toFixed(2)}%</Typography>\n              <Tooltip title=\"Listen\" arrow>\n                <IconButton aria-label=\"Listen\" onClick={() => playChord(chord)}>\n                  <PlayCircleOutlineIcon fontSize='large' color='primary'></PlayCircleOutlineIcon>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Add\" arrow>\n                <IconButton aria-label=\"Add\" onClick={() => addChord(chord)}>\n                  <AddBoxIcon fontSize='large' color='primary'></AddBoxIcon>\n                </IconButton>\n              </Tooltip>\n        </Paper>\n    );\n  }\n\n  export default ChordSuggestionCard;","const Constants = {\n    NumberOfNotes: 12,\n    SequenceLength: 20,\n    SuggestedChordNumber: 7\n}\n\nexport default Constants;","import ToComponents from '../dictionaries/quality_to_components'\nimport ToNumber from '../dictionaries/note_to_value'\nimport ToNote from '../dictionaries/value_to_note'\nimport Constants from '../utils/Constants'\nimport * as Vex from 'vexflow'\n\nexport default class Chord {\n    constructor(name) {\n        const containsAccidental = name.length > 1 && (name[1] === '#' || name[1] === 'b');\n\n        this.root_name = containsAccidental ? name.substring(0,2) : name.substring(0,1);\n        this.quality_name = containsAccidental ? name.substring(2) : name.substring(1);\n\n        this.name = name;\n\n        this.notes = this.getNotes();\n    }\n\n    getNotes() {\n        const root_value = ToNumber[this.root_name];\n        const quality_components = ToComponents[this.quality_name];\n\n        const absolute_quality_components = \n                quality_components.map(relative_component => root_value + relative_component );\n\n        const accidentalToAvoid = this.root_name.includes('b') ? '#' : 'b';\n\n        const baseScale = root_value >=7 ? 3 : 4;\n\n        const notes = absolute_quality_components.map(component => {\n            const suffix = baseScale + Math.floor(component / Constants.NumberOfNotes);\n            const note_name = ToNote[component % Constants.NumberOfNotes].find(name => !name.includes(accidentalToAvoid))\n\n            return `${note_name}${suffix}`\n        });\n\n        return notes;\n    }\n\n    toVexChord(showCaption) {\n        const VF = Vex.Flow;\n\n        const plainNotes = this.notes.map(noteName => `${noteName[0]}/${noteName[noteName.length -1]}`); //G#4 -> G/4 \n\n        const accidentals = this.notes\n                                .map( (noteName, index) => ({index, noteName}))\n                                .filter(tuple => tuple.noteName.length > 2)\n                                .map(tuple => ({...tuple, type: tuple.noteName[1]}));\n\n        const result = new VF.StaveNote({clef: \"treble\", keys: plainNotes, duration: \"w\" })\n\n        if(showCaption) {\n            result.addModifier(0, new Vex.Flow.Annotation(this.name).setVerticalJustification(Vex.Flow.Annotation.VerticalJustify.TOP));\n        }\n\n        accidentals.forEach(accidental => result.addAccidental(accidental.index, new VF.Accidental(accidental.type)))\n        return result;\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ToNote from './../dictionaries/value_to_note.json'\nimport { range } from 'lodash'\nimport Qualities from './../dictionaries/unique_qualities.json'\nimport Chord from '../utils/Chord.js';\n\nconst typeWidth = 120;\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 10,\n      maxWidth:typeWidth\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\nconst CustomChordSelector = ({chordSelected}) => {\n    const classes = useStyles();\n    const [root, setRoot] = useState('C');\n    const [type, setType] = useState('maj');\n\n    useEffect(() => {\n        chordSelected(new Chord(`${root}${type === 'maj' ? '' : type}`));\n    }, [root, type, chordSelected])\n\n    return (\n        <>\n            <div>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"root-label\">Root</InputLabel>\n                    <Select\n                    labelId=\"root-label\"\n                    id=\"root-select\"\n                    value={root}\n                    onChange={event => setRoot(event.target.value)}\n                    >\n                    {range(0,12).map(value => <MenuItem key={value} value={ToNote[value][0]}>{ToNote[value][0]}</MenuItem>)}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl} style={{width:typeWidth}}>\n                    <InputLabel id=\"type-label\">Type</InputLabel>\n                    <Select\n                    labelId=\"type-label\"\n                    id=\"type-select\"\n                    value={type}\n                    onChange={event => setType(event.target.value)}\n                    >\n                    {Qualities.map(quality => <MenuItem key={quality || 'maj'} value={quality || 'maj'}>{quality || 'maj'}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </div>\n        </>\n    )\n};\n\nexport default CustomChordSelector;","import React , { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Tooltip, IconButton } from '@material-ui/core'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport newId from '../utils/NewId';\nimport {playChord} from '../utils/Player';\nimport CustomChordSelector from './CustomChordSelector';\nimport Chord from '../utils/Chord';\nimport drawChords from '../utils/Drawer';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    },\n  }));\n\nconst sheetWidth = 130;\nconst sheetHeight = 118.5;\n\nconst CustomChordCard = ({addChord}) => {\n    const classes = useStyles();\n    const randomId = newId('div-');\n\n    const [customChord, setCustomChord] = useState(new Chord('C'));\n\n    useEffect(() => {\n      const div = document.getElementById(randomId);\n      drawChords([customChord], div,sheetWidth, sheetHeight);\n    }, [customChord, randomId])\n\n    return (\n      <Paper className={classes.paper} style={{minWidth:sheetWidth + 10}}>\n              <CustomChordSelector chordSelected={setCustomChord}></CustomChordSelector>\n              <div style={{textAlign:'center'}}>\n                <div id={randomId} style={{width: sheetWidth, display:'inline-block'}}></div>\n              </div>\n              <Tooltip title=\"Listen\" arrow>\n                <IconButton aria-label=\"Listen\" onClick={() => playChord(customChord)}>\n                  <PlayCircleOutlineIcon fontSize='large' color='primary'></PlayCircleOutlineIcon>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Add\" arrow>\n                <IconButton aria-label=\"Add\" onClick={() => addChord(customChord)}>\n                  <AddBoxIcon fontSize='large' color='primary'></AddBoxIcon>\n                </IconButton>\n              </Tooltip>\n        </Paper>\n    );\n  }\n\n  export default CustomChordCard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ChordSuggestionCard from './ChordSuggestionCard';\nimport CustomChordCard from './CustomChordCard';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst ChordSelector = ({chordSuggestions, addChord}) => {\n  const classes = useStyles();\n\n   const createRow = (chordSuggestionsSlice) => {\n    return (\n      <React.Fragment>\n        {chordSuggestionsSlice.map((suggestion, index) => (\n          <Grid item xs={3} key={index}>\n          {suggestion ? <ChordSuggestionCard suggestion={suggestion} addChord={addChord}></ChordSuggestionCard> : <CustomChordCard  addChord={addChord}></CustomChordCard>}\n        </Grid>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root} style={{display: 'inline-flex'}}>\n      <Grid container spacing={1} style={{maxWidth:1000}}>\n        <Grid container item xs={12} spacing={2}>\n          {createRow(chordSuggestions.slice(0,4))}\n        </Grid>\n        <Grid container item xs={12} spacing={2}>\n          {createRow([...chordSuggestions.slice(4,7),null])}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ChordSelector;","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport drawChords from '../utils/Drawer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    marginLeft: 100,\n    marginRight: 100\n  },\n}));\n\nconst sheetWidth = 1100;\nconst sheetHeight = 120;\nconst divId = 'sheet-div';\n\nconst Sheet = ({chords}) => {\n    const classes = useStyles();\n\n    useEffect(() => {\n      var div = document.getElementById(divId)\n      drawChords(chords, div, sheetWidth, sheetHeight,true);\n    }, [chords])\n\n    return (\n        <Paper className={classes.paper}>\n            <div style={{textAlign:'center'}}>\n                <div id={divId} style={{width: sheetWidth, display:'inline-block'}}></div>\n            </div>\n        </Paper>\n    )\n}\n\nexport default Sheet;","import React from 'react';\nimport { Tooltip, IconButton } from '@material-ui/core'\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst SheetActions = ({play, removeLast, clear}) => {\nreturn (\n    <div>\n        <Tooltip title=\"Listen\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Listen\" onClick={play}>\n            <PlayCircleOutlineIcon fontSize='large' color='primary'></PlayCircleOutlineIcon>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Remove last chord\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Remove last chord\" onClick={removeLast}>\n            <BackspaceIcon fontSize='large' color='primary'></BackspaceIcon>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Clear composition\" placement=\"top\" arrow>\n          <IconButton aria-label=\"Clear composition\" onClick={clear}>\n            <DeleteForeverIcon fontSize='large' color='primary'></DeleteForeverIcon>\n          </IconButton>\n        </Tooltip>\n    </div>\n  )\n}\n\nexport default SheetActions;","import ChordSelector from './ChordSelector';\nimport React from 'react';\nimport Sheet from './Sheet';\nimport SheetActions from './SheetActions';\nimport { playChords } from '../utils/Player';\n\nconst Composer = ({chordSuggestions,chords,setChords}) => {\n    return (\n        <>\n          <Sheet chords={chords}></Sheet>\n          <SheetActions \n            play={() => playChords(chords)}\n            removeLast={() => setChords(previousChords => previousChords.slice(0, -1) )}\n            clear={() => setChords([])}\n          ></SheetActions>\n          <ChordSelector \n            chordSuggestions={chordSuggestions}\n            addChord={(chord) => setChords(previousChords => [...previousChords, chord])}\n          ></ChordSelector>\n        </>\n    )\n}\n\nexport default Composer;","import * as tf from '@tensorflow/tfjs';\nimport ToNumber from './../dictionaries/category_to_number.json'\nimport ToChord from './../dictionaries/number_to_category.json'\nimport Constants from './Constants.js';\nimport Chord from './Chord';\n\nexport const loadModel = async (modelFile, weightsFile) => {\n    const loadedModel = await tf.loadLayersModel(tf.io.browserFiles(\n    [modelFile, weightsFile]));\n    return loadedModel;\n}\n\nexport const getChordSuggestions = (model, chords) => {\n      const numberSequence = chords.map(chord => ToNumber[chord.name])\n      const sequenceWithFixedLength = ensureArrayLength(numberSequence,Constants.SequenceLength);\n     \n      let tensor = tf.tensor1d(sequenceWithFixedLength, 'int32').expandDims(0);\n      const prediction = model.predict(tensor)\n      const values = prediction.dataSync();\n\n      const probabilities = Array.from(values);\n      probabilities.shift() //Remove probabiliy for null chord\n\n      let chordProbabilities = probabilities.map((value,index) => (\n          {\n            probability:value, \n            name: ToChord[index+1], \n            chord:new Chord(ToChord[index+1]) \n          }));\n      chordProbabilities = chordProbabilities.sort( (left, right) => right.probability - left.probability);\n      chordProbabilities = chordProbabilities.slice(0,Constants.SuggestedChordNumber);\n      \n      return chordProbabilities;\n}\n\nconst ensureArrayLength = (array, desiredLength) => {\n    if(array.length < desiredLength) return pad_array(array,desiredLength,0);\n\n    return array.slice(array.length - desiredLength);;\n}\n\nconst pad_array = (array,desiredLength,fill) => {\n    const pad = new Array(desiredLength - array.length);\n    pad.fill(0)\n\n    return [...pad,...array];\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Stepper from './components/Stepper';\nimport ModelSelector from './components/ModelSelector'\nimport WidthsSelector from './components/WidthsSelector'\nimport Composer from './components/Composer'\nimport Chord from './utils/Chord';\nimport { Typography } from '@material-ui/core';\nimport { loadModel, getChordSuggestions } from './utils/Model';\n\n//TODO\n\n/*\n- Poder escuchar varias veces la melodia.\n- Loading al cargar modelo. \n- Puntos del stepper no se ven demasiado bien. \n- Enlace a GitHub (front), Linkedin y Correo de TW en la página\n- Rellenar en fron más explicaciones aparte de la isntalación. Poner enlace a github de back.\n- Subir lo que falte de back. \n- Evaluar el modelo!!!!!\n- Hacer memoria básica en markdon o pdf. \n- Hacer memoria o explicación en la misma página  /https://rexxars.github.io/react-markdown/?\n- Algún grafiquillo más bonito. \n- INCLUIR DATOS DE ALGUNA MANERA!!!\n\n\n\n\n\n*/\n\nconst theme = createMuiTheme({\n    palette: {\n      text: {\n        primary: \"#4db6ac\",\n        secondary: \"#707070\"\n      },\n      primary: {\n        light: '#82e9de',\n        main: '#4db6ac',\n        dark: '#00867d',\n        contrastText: '#e8f5e9',\n      },\n      secondary: {\n        light: '#cfcfcf',\n        main: '#9e9e9e',\n        dark: '#707070',\n        contrastText: '#fafafa',\n      },\n    },\n  });\n\nconst App = () => {\n  document.body.style = 'background: #282c34;';\n\n  const initialSuggestedChords = ['C', 'D', 'E', 'F', 'G', 'A', 'B'].map(chordName => new Chord(chordName));\n\n  const [modelFile, setModelFile] = useState();\n  const [weightsFile, setWeightsFile] = useState();\n  const [model, setModel] = useState();\n\n  const pachebel = ['D' ,'A' , 'Bm' , 'F#m' , 'G' , 'D'  ,'G',  'A'];\n  const initialChords = pachebel.map(chordName => new Chord(chordName));\n  const [chords,setChords] = useState(initialChords)\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [chordSuggestions, setChordSuggestions] = useState(initialSuggestedChords);\n\n  useEffect(() => {\n    if(!modelFile) return;\n    if(!weightsFile) return;\n\n    loadModel(modelFile, weightsFile).then(loadedModel => {\n      setModel(loadedModel);\n      setActiveStep(3);\n    })\n  }, [modelFile, weightsFile])\n\n  useEffect(() => {\n    if(!model) return;\n\n    const suggestions = getChordSuggestions(model, chords);\n    setChordSuggestions(suggestions);\n  }, [model, chords]);\n\n  const onModelFileSelected = (selectedModelFile) => {\n    setActiveStep(1);\n    setModelFile(selectedModelFile);\n  }\n\n  const onWeightsFileSelected = (selectedWeightsFile) => {\n    console.log(selectedWeightsFile);\n    setActiveStep(2);\n    setWeightsFile(selectedWeightsFile);\n  }\n\n  const loadFile = (fileName, fileType) => {\n    return new Promise(function (resolve, reject) {\n        console.log(`Loading ${fileName}`);\n        let xhr = new XMLHttpRequest();\n        xhr.open('GET', fileName);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n              const blob = xhr.response;\n              resolve(new File([blob], fileName, {type: fileType, lastModified: Date.now()}));\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n}\n\nconst initModel = async () => {\n  const modelFile = await loadFile('model.json', 'application/json');\n  const weightsFile = await loadFile('group1-shard1of1.bin', 'application/bin');\n  const loadedModel = await loadModel(modelFile, weightsFile);\n\n  setModel(loadedModel);\n  setActiveStep(3);\n}\n\n  useEffect(() => {\n    if(activeStep !== 0) return;\n\n    initModel().then();\n\n  }, [activeStep])\n \n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Stepper activeStep={activeStep} setActiveStep={setActiveStep}></Stepper>\n        </header>\n        <div className=\"App-body\">\n          <ModelSelector display={activeStep === 0} onSelected={onModelFileSelected}></ModelSelector>\n          <WidthsSelector display={activeStep === 1} onSelected={onWeightsFileSelected}></WidthsSelector>\n          {activeStep === 2 ? <Typography>Loading...</Typography> : null}\n          {activeStep === 3 ? <Composer chordSuggestions={chordSuggestions} chords={chords} setChords={setChords}></Composer> : null}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}